#!/bin/bash
echo "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –∏–∑–º–µ—Ä–µ–Ω–∏–µ–º –ø–æ–∫—Ä—ã—Ç–∏—è"

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∫—Ä—ã—Ç–∏—è
rm -rf ./FinanceApp.Tests/TestResults/

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º —Ñ–æ—Ä–º–∞—Ç–æ–≤ –ø–æ–∫—Ä—ã—Ç–∏—è –∏ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
dotnet test --collect:"XPlat Code Coverage" --results-directory:"./FinanceApp.Tests/TestResults" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura

# –ù–∞—Ö–æ–¥–∏–º —Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∫—Ä—ã—Ç–∏—è
COVERAGE_FILE=$(find ./FinanceApp.Tests/TestResults -name "coverage.cobertura.xml" -type f)

if [ -f "$COVERAGE_FILE" ]; then
    echo "–§–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –Ω–∞–π–¥–µ–Ω: $COVERAGE_FILE"
    echo "–°—É–º–º–∞—Ä–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞:"
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–æ–∫
    LINE_RATE=$(grep -o 'line-rate="[0-9.]*"' $COVERAGE_FILE | head -1 | cut -d'"' -f2)
    if [ -n "$LINE_RATE" ]; then
        COVERAGE_PERCENT=$(awk "BEGIN {printf \"%.2f%%\", $LINE_RATE * 100}")
        echo "–ü–æ–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞: $COVERAGE_PERCENT"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏ –Ω—É–∂–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è
        if (( $(echo "$LINE_RATE >= 0.65" | bc -l) )); then
            echo "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ 65%"
        else
            echo "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ø–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞ –Ω–∏–∂–µ —Ç—Ä–µ–±—É–µ–º—ã—Ö 65%. –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: $COVERAGE_PERCENT"
        fi
    else
        echo "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞ $COVERAGE_FILE"
    fi
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –æ—Ç—á–µ—Ç–∞
    REPORT_DIR="./FinanceApp.Tests/TestResults/report"
    mkdir -p $REPORT_DIR
    
    echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –æ—Ç—á–µ—Ç–∞..."
    
    # –°—á–µ—Ç—á–∏–∫ —Å—Ç—Ä–æ–∫ –¥–ª—è –∫–ª–∞—Å—Å–æ–≤
    echo "<html><head><title>–û—Ç—á–µ—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –∫–æ–¥–∞</title>" > $REPORT_DIR/index.html
    echo "<style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        table { border-collapse: collapse; width: 100%; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        tr:nth-child(even) { background-color: #f2f2f2; }
        th { background-color: #4CAF50; color: white; }
        .good { color: green; }
        .bad { color: red; }
        .warning { color: orange; }
    </style></head><body>" >> $REPORT_DIR/index.html
    
    echo "<h1>–û—Ç—á–µ—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –∫–æ–¥–∞</h1>" >> $REPORT_DIR/index.html
    echo "<p>–û–±—â–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ: <span class='$([ $(echo "$LINE_RATE < 0.65" | bc -l) -eq 1 ] && echo "bad" || echo "good")'>$COVERAGE_PERCENT</span></p>" >> $REPORT_DIR/index.html
    
    echo "<h2>–ü–æ–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∞—Å—Å–∞–º:</h2>" >> $REPORT_DIR/index.html
    echo "<table><tr><th>–ö–ª–∞—Å—Å</th><th>–ü–æ–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–æ–∫</th></tr>" >> $REPORT_DIR/index.html
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –ø–æ –∫–ª–∞—Å—Å–∞–º
    grep -A 1 '<class name=' $COVERAGE_FILE | grep -v -- "--" | paste - - | 
    sed 's/<class name=\"\(.*\)\" filename.*line-rate=\"\([0-9.]*\)\".*/\1;\2/g' | 
    while IFS=';' read -r classname linerate; do
        coverage_pct=$(awk "BEGIN {printf \"%.2f%%\", $linerate * 100}")
        css_class=$([ $(echo "$linerate < 0.5" | bc -l) -eq 1 ] && echo "bad" || ([ $(echo "$linerate < 0.75" | bc -l) -eq 1 ] && echo "warning" || echo "good"))
        echo "<tr><td>$classname</td><td class='$css_class'>$coverage_pct</td></tr>" >> $REPORT_DIR/index.html
    done
    
    echo "</table></body></html>" >> $REPORT_DIR.index.html
    
    echo "–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –≤ $REPORT_DIR/index.html"
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ—Ç—á–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    if [[ "$OSTYPE" == "darwin"* ]]; then
        open $REPORT_DIR/index.html || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –æ—Ç—á–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        xdg-open $REPORT_DIR/index.html || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –æ—Ç—á–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    fi
else
    echo "–§–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∫—Ä—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω."
    echo "–ü–æ–∏—Å–∫ –≤—ã–ø–æ–ª–Ω—è–ª—Å—è –≤: ./FinanceApp.Tests/TestResults/"
    find ./FinanceApp.Tests/TestResults -type f | sort
fi
